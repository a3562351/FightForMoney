// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Battle.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Protobuf {

  /// <summary>Holder for reflection information generated from Battle.proto</summary>
  public static partial class BattleReflection {

    #region Descriptor
    /// <summary>File descriptor for Battle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxCYXR0bGUucHJvdG8SD2NvbW1vbi5wcm90b2J1ZhoMQ29tbW9uLnByb3Rv",
            "IpgBChBDU0JhdHRsZUJlaGF2aW9yEhEKCWVudGl0eV9pZBgBIAEoBRIkCgNw",
            "b3MYAiABKAsyFy5jb21tb24ucHJvdG9idWYuU1RfUG9zEiYKBGZhY2UYAyAB",
            "KAsyGC5jb21tb24ucHJvdG9idWYuU1RfRmFjZRIQCghza2lsbF9pZBgEIAEo",
            "BRIRCgl0YXJnZXRfaWQYBSABKAUimAEKEFNDQmF0dGxlQmVoYXZpb3ISEQoJ",
            "ZW50aXR5X2lkGAEgASgFEiQKA3BvcxgCIAEoCzIXLmNvbW1vbi5wcm90b2J1",
            "Zi5TVF9Qb3MSJgoEZmFjZRgDIAEoCzIYLmNvbW1vbi5wcm90b2J1Zi5TVF9G",
            "YWNlEhAKCHNraWxsX2lkGAQgASgFEhEKCXRhcmdldF9pZBgFIAEoBSIVChNT",
            "Q0JhdHRsZVN0YXRlVXBkYXRlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.Protobuf.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.CSBattleBehavior), global::Common.Protobuf.CSBattleBehavior.Parser, new[]{ "EntityId", "Pos", "Face", "SkillId", "TargetId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.SCBattleBehavior), global::Common.Protobuf.SCBattleBehavior.Parser, new[]{ "EntityId", "Pos", "Face", "SkillId", "TargetId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.SCBattleStateUpdate), global::Common.Protobuf.SCBattleStateUpdate.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CSBattleBehavior : pb::IMessage<CSBattleBehavior> {
    private static readonly pb::MessageParser<CSBattleBehavior> _parser = new pb::MessageParser<CSBattleBehavior>(() => new CSBattleBehavior());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBattleBehavior> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.BattleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBattleBehavior() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBattleBehavior(CSBattleBehavior other) : this() {
      entityId_ = other.entityId_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      face_ = other.face_ != null ? other.face_.Clone() : null;
      skillId_ = other.skillId_;
      targetId_ = other.targetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBattleBehavior Clone() {
      return new CSBattleBehavior(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private int entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::Common.Protobuf.ST_Pos pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.ST_Pos Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "face" field.</summary>
    public const int FaceFieldNumber = 3;
    private global::Common.Protobuf.ST_Face face_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.ST_Face Face {
      get { return face_; }
      set {
        face_ = value;
      }
    }

    /// <summary>Field number for the "skill_id" field.</summary>
    public const int SkillIdFieldNumber = 4;
    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 5;
    private int targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBattleBehavior);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBattleBehavior other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityId != other.EntityId) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Face, other.Face)) return false;
      if (SkillId != other.SkillId) return false;
      if (TargetId != other.TargetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityId != 0) hash ^= EntityId.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (face_ != null) hash ^= Face.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (TargetId != 0) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntityId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EntityId);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (face_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Face);
      }
      if (SkillId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SkillId);
      }
      if (TargetId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntityId);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (face_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Face);
      }
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (TargetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBattleBehavior other) {
      if (other == null) {
        return;
      }
      if (other.EntityId != 0) {
        EntityId = other.EntityId;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          pos_ = new global::Common.Protobuf.ST_Pos();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.face_ != null) {
        if (face_ == null) {
          face_ = new global::Common.Protobuf.ST_Face();
        }
        Face.MergeFrom(other.Face);
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.TargetId != 0) {
        TargetId = other.TargetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EntityId = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              pos_ = new global::Common.Protobuf.ST_Pos();
            }
            input.ReadMessage(pos_);
            break;
          }
          case 26: {
            if (face_ == null) {
              face_ = new global::Common.Protobuf.ST_Face();
            }
            input.ReadMessage(face_);
            break;
          }
          case 32: {
            SkillId = input.ReadInt32();
            break;
          }
          case 40: {
            TargetId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCBattleBehavior : pb::IMessage<SCBattleBehavior> {
    private static readonly pb::MessageParser<SCBattleBehavior> _parser = new pb::MessageParser<SCBattleBehavior>(() => new SCBattleBehavior());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBattleBehavior> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.BattleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBattleBehavior() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBattleBehavior(SCBattleBehavior other) : this() {
      entityId_ = other.entityId_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      face_ = other.face_ != null ? other.face_.Clone() : null;
      skillId_ = other.skillId_;
      targetId_ = other.targetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBattleBehavior Clone() {
      return new SCBattleBehavior(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private int entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::Common.Protobuf.ST_Pos pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.ST_Pos Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "face" field.</summary>
    public const int FaceFieldNumber = 3;
    private global::Common.Protobuf.ST_Face face_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.ST_Face Face {
      get { return face_; }
      set {
        face_ = value;
      }
    }

    /// <summary>Field number for the "skill_id" field.</summary>
    public const int SkillIdFieldNumber = 4;
    private int skillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkillId {
      get { return skillId_; }
      set {
        skillId_ = value;
      }
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 5;
    private int targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBattleBehavior);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBattleBehavior other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityId != other.EntityId) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Face, other.Face)) return false;
      if (SkillId != other.SkillId) return false;
      if (TargetId != other.TargetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityId != 0) hash ^= EntityId.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (face_ != null) hash ^= Face.GetHashCode();
      if (SkillId != 0) hash ^= SkillId.GetHashCode();
      if (TargetId != 0) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntityId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EntityId);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (face_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Face);
      }
      if (SkillId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SkillId);
      }
      if (TargetId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntityId);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (face_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Face);
      }
      if (SkillId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillId);
      }
      if (TargetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBattleBehavior other) {
      if (other == null) {
        return;
      }
      if (other.EntityId != 0) {
        EntityId = other.EntityId;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          pos_ = new global::Common.Protobuf.ST_Pos();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.face_ != null) {
        if (face_ == null) {
          face_ = new global::Common.Protobuf.ST_Face();
        }
        Face.MergeFrom(other.Face);
      }
      if (other.SkillId != 0) {
        SkillId = other.SkillId;
      }
      if (other.TargetId != 0) {
        TargetId = other.TargetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EntityId = input.ReadInt32();
            break;
          }
          case 18: {
            if (pos_ == null) {
              pos_ = new global::Common.Protobuf.ST_Pos();
            }
            input.ReadMessage(pos_);
            break;
          }
          case 26: {
            if (face_ == null) {
              face_ = new global::Common.Protobuf.ST_Face();
            }
            input.ReadMessage(face_);
            break;
          }
          case 32: {
            SkillId = input.ReadInt32();
            break;
          }
          case 40: {
            TargetId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCBattleStateUpdate : pb::IMessage<SCBattleStateUpdate> {
    private static readonly pb::MessageParser<SCBattleStateUpdate> _parser = new pb::MessageParser<SCBattleStateUpdate>(() => new SCBattleStateUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBattleStateUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.BattleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBattleStateUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBattleStateUpdate(SCBattleStateUpdate other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBattleStateUpdate Clone() {
      return new SCBattleStateUpdate(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBattleStateUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBattleStateUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBattleStateUpdate other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
