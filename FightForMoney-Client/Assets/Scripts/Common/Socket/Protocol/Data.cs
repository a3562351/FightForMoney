// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Protobuf {

  /// <summary>Holder for reflection information generated from Data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for Data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpEYXRhLnByb3RvEg9jb21tb24ucHJvdG9idWYiEQoPUm91dGVTZXJ2ZXJE",
            "YXRhIsEBCg9Mb2dpblNlcnZlckRhdGESEwoLbWF4X3VzZXJfaWQYASABKAUS",
            "FQoNbWF4X3BsYXllcl9pZBgCIAEoBRJMCg9wbGF5ZXJfbmFtZV9tYXAYAyAD",
            "KAsyMy5jb21tb24ucHJvdG9idWYuTG9naW5TZXJ2ZXJEYXRhLlBsYXllck5h",
            "bWVNYXBFbnRyeRo0ChJQbGF5ZXJOYW1lTWFwRW50cnkSCwoDa2V5GAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgFOgI4ASIRCg9TY2VuZVNlcnZlckRhdGEiEgoQQ29t",
            "bW9uU2VydmVyRGF0YSJWCgtBY2NvdW50SW5mbxIPCgdhY2NvdW50GAEgASgJ",
            "EhAKCHBhc3N3b3JkGAIgASgJEhMKC2NyZWF0ZV90aW1lGAMgASgFEg8KB3Vz",
            "ZXJfaWQYBCABKAUiXAoIVXNlckluZm8SDwoHdXNlcl9pZBgBIAEoBRIWCg5w",
            "bGF5ZXJfaWRfbGlzdBgCIAMoBRISCgpsb2dpbl90aW1lGAMgASgFEhMKC2xv",
            "Z291dF90aW1lGAQgASgFItgCCgxQbGF5ZXJTdHJ1Y3QSMAoLcGxheWVyX2Rh",
            "dGEYASABKAsyGy5jb21tb24ucHJvdG9idWYuUGxheWVyRGF0YRIqCghtYXBf",
            "ZGF0YRgCIAEoCzIYLmNvbW1vbi5wcm90b2J1Zi5NYXBEYXRhEiwKCWl0ZW1f",
            "ZGF0YRgDIAEoCzIZLmNvbW1vbi5wcm90b2J1Zi5JdGVtRGF0YRIsCglzaG9w",
            "X2RhdGEYBCABKAsyGS5jb21tb24ucHJvdG9idWYuU2hvcERhdGESLgoKc3Rh",
            "ZmZfZGF0YRgFIAEoCzIaLmNvbW1vbi5wcm90b2J1Zi5TdGFmZkRhdGESLgoK",
            "ZXF1aXBfZGF0YRgGIAEoCzIaLmNvbW1vbi5wcm90b2J1Zi5FcXVpcERhdGES",
            "LgoKdHJ1Y2tfZGF0YRgHIAEoCzIaLmNvbW1vbi5wcm90b2J1Zi5UcnVja0Rh",
            "dGEiVwoKUGxheWVyRGF0YRIKCgJpZBgBIAEoBRIMCgRuYW1lGAIgASgJEhAK",
            "CG1hcF9uYW1lGAMgASgJEg0KBW1vbmV5GAQgASgFEg4KBnByYWlzZRgFIAEo",
            "BSKDAQoHTWFwRGF0YRIuCgNtYXAYASADKAsyIS5jb21tb24ucHJvdG9idWYu",
            "TWFwRGF0YS5NYXBFbnRyeRpICghNYXBFbnRyeRILCgNrZXkYASABKAkSKwoF",
            "dmFsdWUYAiABKAsyHC5jb21tb24ucHJvdG9idWYuTWFwRGF0YVVuaXQ6AjgB",
            "IncKC01hcERhdGFVbml0EjUKDHRlcnJhaW5fbGlzdBgBIAMoCzIfLmNvbW1v",
            "bi5wcm90b2J1Zi5NYXBUZXJyYWluRGF0YRIxCgpidWlsZF9saXN0GAIgAygL",
            "Mh0uY29tbW9uLnByb3RvYnVmLk1hcEJ1aWxkRGF0YSIhCg5NYXBUZXJyYWlu",
            "RGF0YRIPCgdncmlkX2lkGAEgASgFIh8KDE1hcEJ1aWxkRGF0YRIPCgdncmlk",
            "X2lkGAEgASgFIpYBCghJdGVtRGF0YRIPCgd2ZXJzaW9uGAEgASgFEgwKBGdy",
            "aWQYAiABKAUSOgoJaXRlbV9saXN0GAMgAygLMicuY29tbW9uLnByb3RvYnVm",
            "Lkl0ZW1EYXRhLkl0ZW1MaXN0RW50cnkaLwoNSXRlbUxpc3RFbnRyeRILCgNr",
            "ZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIi8KCFNob3BEYXRhEhAKCGNh",
            "cGFjaXR5GAEgASgFEhEKCWl0ZW1fbGlzdBgCIAMoBSI7CglTdGFmZkRhdGES",
            "LgoKc3RhZmZfbGlzdBgBIAMoCzIaLmNvbW1vbi5wcm90b2J1Zi5TdGFmZklu",
            "Zm8iKQoJU3RhZmZJbmZvEgoKAmlkGAEgASgFEhAKCGVuZF90aW1lGAIgASgF",
            "IjoKBEF0dHISCgoCaHAYASABKAUSCgoCbXAYAiABKAUSDAoEZm9vZBgDIAEo",
            "BRIMCgRtb29kGAQgASgFIk0KCUVxdWlwRGF0YRIQCghjYXBhY2l0eRgBIAEo",
            "BRIuCgplcXVpcF9saXN0GAIgAygLMhouY29tbW9uLnByb3RvYnVmLkVxdWlw",
            "SW5mbyIXCglFcXVpcEluZm8SCgoCaWQYASABKAUiOwoJVHJ1Y2tEYXRhEi4K",
            "CnRydWNrX2xpc3QYASADKAsyGi5jb21tb24ucHJvdG9idWYuVHJ1Y2tJbmZv",
            "IikKCVRydWNrSW5mbxIKCgJpZBgBIAEoBRIQCghlbmRfdGltZRgCIAEoBSIm",
            "CgpDaGF0UGxheWVyEgoKAmlkGAEgASgFEgwKBG5hbWUYAiABKAkiWwoIQ2hh",
            "dERhdGESMAoLY2hhdF9wbGF5ZXIYASABKAsyGy5jb21tb24ucHJvdG9idWYu",
            "Q2hhdFBsYXllchIPCgdjb250ZW50GAIgASgJEgwKBHRpbWUYAyABKAUiGwoL",
            "U2V0dGluZ0RhdGESDAoEbGFuZxgBIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.RouteServerData), global::Common.Protobuf.RouteServerData.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.LoginServerData), global::Common.Protobuf.LoginServerData.Parser, new[]{ "MaxUserId", "MaxPlayerId", "PlayerNameMap" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.SceneServerData), global::Common.Protobuf.SceneServerData.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.CommonServerData), global::Common.Protobuf.CommonServerData.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.AccountInfo), global::Common.Protobuf.AccountInfo.Parser, new[]{ "Account", "Password", "CreateTime", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.UserInfo), global::Common.Protobuf.UserInfo.Parser, new[]{ "UserId", "PlayerIdList", "LoginTime", "LogoutTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.PlayerStruct), global::Common.Protobuf.PlayerStruct.Parser, new[]{ "PlayerData", "MapData", "ItemData", "ShopData", "StaffData", "EquipData", "TruckData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.PlayerData), global::Common.Protobuf.PlayerData.Parser, new[]{ "Id", "Name", "MapName", "Money", "Praise" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.MapData), global::Common.Protobuf.MapData.Parser, new[]{ "Map" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.MapDataUnit), global::Common.Protobuf.MapDataUnit.Parser, new[]{ "TerrainList", "BuildList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.MapTerrainData), global::Common.Protobuf.MapTerrainData.Parser, new[]{ "GridId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.MapBuildData), global::Common.Protobuf.MapBuildData.Parser, new[]{ "GridId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.ItemData), global::Common.Protobuf.ItemData.Parser, new[]{ "Version", "Grid", "ItemList" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.ShopData), global::Common.Protobuf.ShopData.Parser, new[]{ "Capacity", "ItemList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.StaffData), global::Common.Protobuf.StaffData.Parser, new[]{ "StaffList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.StaffInfo), global::Common.Protobuf.StaffInfo.Parser, new[]{ "Id", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.Attr), global::Common.Protobuf.Attr.Parser, new[]{ "Hp", "Mp", "Food", "Mood" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.EquipData), global::Common.Protobuf.EquipData.Parser, new[]{ "Capacity", "EquipList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.EquipInfo), global::Common.Protobuf.EquipInfo.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.TruckData), global::Common.Protobuf.TruckData.Parser, new[]{ "TruckList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.TruckInfo), global::Common.Protobuf.TruckInfo.Parser, new[]{ "Id", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.ChatPlayer), global::Common.Protobuf.ChatPlayer.Parser, new[]{ "Id", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.ChatData), global::Common.Protobuf.ChatData.Parser, new[]{ "ChatPlayer", "Content", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.SettingData), global::Common.Protobuf.SettingData.Parser, new[]{ "Lang" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///路由服数据
  /// </summary>
  public sealed partial class RouteServerData : pb::IMessage<RouteServerData> {
    private static readonly pb::MessageParser<RouteServerData> _parser = new pb::MessageParser<RouteServerData>(() => new RouteServerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RouteServerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RouteServerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RouteServerData(RouteServerData other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RouteServerData Clone() {
      return new RouteServerData(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RouteServerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RouteServerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RouteServerData other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///登陆服数据
  /// </summary>
  public sealed partial class LoginServerData : pb::IMessage<LoginServerData> {
    private static readonly pb::MessageParser<LoginServerData> _parser = new pb::MessageParser<LoginServerData>(() => new LoginServerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginServerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginServerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginServerData(LoginServerData other) : this() {
      maxUserId_ = other.maxUserId_;
      maxPlayerId_ = other.maxPlayerId_;
      playerNameMap_ = other.playerNameMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginServerData Clone() {
      return new LoginServerData(this);
    }

    /// <summary>Field number for the "max_user_id" field.</summary>
    public const int MaxUserIdFieldNumber = 1;
    private int maxUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxUserId {
      get { return maxUserId_; }
      set {
        maxUserId_ = value;
      }
    }

    /// <summary>Field number for the "max_player_id" field.</summary>
    public const int MaxPlayerIdFieldNumber = 2;
    private int maxPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPlayerId {
      get { return maxPlayerId_; }
      set {
        maxPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "player_name_map" field.</summary>
    public const int PlayerNameMapFieldNumber = 3;
    private static readonly pbc::MapField<string, int>.Codec _map_playerNameMap_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt32(16), 26);
    private readonly pbc::MapField<string, int> playerNameMap_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> PlayerNameMap {
      get { return playerNameMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginServerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginServerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxUserId != other.MaxUserId) return false;
      if (MaxPlayerId != other.MaxPlayerId) return false;
      if (!PlayerNameMap.Equals(other.PlayerNameMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxUserId != 0) hash ^= MaxUserId.GetHashCode();
      if (MaxPlayerId != 0) hash ^= MaxPlayerId.GetHashCode();
      hash ^= PlayerNameMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxUserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxUserId);
      }
      if (MaxPlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxPlayerId);
      }
      playerNameMap_.WriteTo(output, _map_playerNameMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxUserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxUserId);
      }
      if (MaxPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayerId);
      }
      size += playerNameMap_.CalculateSize(_map_playerNameMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginServerData other) {
      if (other == null) {
        return;
      }
      if (other.MaxUserId != 0) {
        MaxUserId = other.MaxUserId;
      }
      if (other.MaxPlayerId != 0) {
        MaxPlayerId = other.MaxPlayerId;
      }
      playerNameMap_.Add(other.playerNameMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxUserId = input.ReadInt32();
            break;
          }
          case 16: {
            MaxPlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            playerNameMap_.AddEntriesFrom(input, _map_playerNameMap_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///场景服数据
  /// </summary>
  public sealed partial class SceneServerData : pb::IMessage<SceneServerData> {
    private static readonly pb::MessageParser<SceneServerData> _parser = new pb::MessageParser<SceneServerData>(() => new SceneServerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SceneServerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneServerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneServerData(SceneServerData other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneServerData Clone() {
      return new SceneServerData(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SceneServerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SceneServerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SceneServerData other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///公共服数据
  /// </summary>
  public sealed partial class CommonServerData : pb::IMessage<CommonServerData> {
    private static readonly pb::MessageParser<CommonServerData> _parser = new pb::MessageParser<CommonServerData>(() => new CommonServerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonServerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonServerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonServerData(CommonServerData other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonServerData Clone() {
      return new CommonServerData(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonServerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonServerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonServerData other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///账号数据
  /// </summary>
  public sealed partial class AccountInfo : pb::IMessage<AccountInfo> {
    private static readonly pb::MessageParser<AccountInfo> _parser = new pb::MessageParser<AccountInfo>(() => new AccountInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo(AccountInfo other) : this() {
      account_ = other.account_;
      password_ = other.password_;
      createTime_ = other.createTime_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo Clone() {
      return new AccountInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private int createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      if (CreateTime != other.CreateTime) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (CreateTime != 0) hash ^= CreateTime.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (CreateTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CreateTime);
      }
      if (UserId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (CreateTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreateTime);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountInfo other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.CreateTime != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            CreateTime = input.ReadInt32();
            break;
          }
          case 32: {
            UserId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///用户数据
  /// </summary>
  public sealed partial class UserInfo : pb::IMessage<UserInfo> {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo(UserInfo other) : this() {
      userId_ = other.userId_;
      playerIdList_ = other.playerIdList_.Clone();
      loginTime_ = other.loginTime_;
      logoutTime_ = other.logoutTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "player_id_list" field.</summary>
    public const int PlayerIdListFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_playerIdList_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> playerIdList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PlayerIdList {
      get { return playerIdList_; }
    }

    /// <summary>Field number for the "login_time" field.</summary>
    public const int LoginTimeFieldNumber = 3;
    private int loginTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoginTime {
      get { return loginTime_; }
      set {
        loginTime_ = value;
      }
    }

    /// <summary>Field number for the "logout_time" field.</summary>
    public const int LogoutTimeFieldNumber = 4;
    private int logoutTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LogoutTime {
      get { return logoutTime_; }
      set {
        logoutTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if(!playerIdList_.Equals(other.playerIdList_)) return false;
      if (LoginTime != other.LoginTime) return false;
      if (LogoutTime != other.LogoutTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      hash ^= playerIdList_.GetHashCode();
      if (LoginTime != 0) hash ^= LoginTime.GetHashCode();
      if (LogoutTime != 0) hash ^= LogoutTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      playerIdList_.WriteTo(output, _repeated_playerIdList_codec);
      if (LoginTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LoginTime);
      }
      if (LogoutTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LogoutTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      size += playerIdList_.CalculateSize(_repeated_playerIdList_codec);
      if (LoginTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoginTime);
      }
      if (LogoutTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LogoutTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      playerIdList_.Add(other.playerIdList_);
      if (other.LoginTime != 0) {
        LoginTime = other.LoginTime;
      }
      if (other.LogoutTime != 0) {
        LogoutTime = other.LogoutTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            playerIdList_.AddEntriesFrom(input, _repeated_playerIdList_codec);
            break;
          }
          case 24: {
            LoginTime = input.ReadInt32();
            break;
          }
          case 32: {
            LogoutTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///玩家所有数据
  /// </summary>
  public sealed partial class PlayerStruct : pb::IMessage<PlayerStruct> {
    private static readonly pb::MessageParser<PlayerStruct> _parser = new pb::MessageParser<PlayerStruct>(() => new PlayerStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStruct(PlayerStruct other) : this() {
      playerData_ = other.playerData_ != null ? other.playerData_.Clone() : null;
      mapData_ = other.mapData_ != null ? other.mapData_.Clone() : null;
      itemData_ = other.itemData_ != null ? other.itemData_.Clone() : null;
      shopData_ = other.shopData_ != null ? other.shopData_.Clone() : null;
      staffData_ = other.staffData_ != null ? other.staffData_.Clone() : null;
      equipData_ = other.equipData_ != null ? other.equipData_.Clone() : null;
      truckData_ = other.truckData_ != null ? other.truckData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStruct Clone() {
      return new PlayerStruct(this);
    }

    /// <summary>Field number for the "player_data" field.</summary>
    public const int PlayerDataFieldNumber = 1;
    private global::Common.Protobuf.PlayerData playerData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.PlayerData PlayerData {
      get { return playerData_; }
      set {
        playerData_ = value;
      }
    }

    /// <summary>Field number for the "map_data" field.</summary>
    public const int MapDataFieldNumber = 2;
    private global::Common.Protobuf.MapData mapData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.MapData MapData {
      get { return mapData_; }
      set {
        mapData_ = value;
      }
    }

    /// <summary>Field number for the "item_data" field.</summary>
    public const int ItemDataFieldNumber = 3;
    private global::Common.Protobuf.ItemData itemData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.ItemData ItemData {
      get { return itemData_; }
      set {
        itemData_ = value;
      }
    }

    /// <summary>Field number for the "shop_data" field.</summary>
    public const int ShopDataFieldNumber = 4;
    private global::Common.Protobuf.ShopData shopData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.ShopData ShopData {
      get { return shopData_; }
      set {
        shopData_ = value;
      }
    }

    /// <summary>Field number for the "staff_data" field.</summary>
    public const int StaffDataFieldNumber = 5;
    private global::Common.Protobuf.StaffData staffData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.StaffData StaffData {
      get { return staffData_; }
      set {
        staffData_ = value;
      }
    }

    /// <summary>Field number for the "equip_data" field.</summary>
    public const int EquipDataFieldNumber = 6;
    private global::Common.Protobuf.EquipData equipData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.EquipData EquipData {
      get { return equipData_; }
      set {
        equipData_ = value;
      }
    }

    /// <summary>Field number for the "truck_data" field.</summary>
    public const int TruckDataFieldNumber = 7;
    private global::Common.Protobuf.TruckData truckData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.TruckData TruckData {
      get { return truckData_; }
      set {
        truckData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerData, other.PlayerData)) return false;
      if (!object.Equals(MapData, other.MapData)) return false;
      if (!object.Equals(ItemData, other.ItemData)) return false;
      if (!object.Equals(ShopData, other.ShopData)) return false;
      if (!object.Equals(StaffData, other.StaffData)) return false;
      if (!object.Equals(EquipData, other.EquipData)) return false;
      if (!object.Equals(TruckData, other.TruckData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerData_ != null) hash ^= PlayerData.GetHashCode();
      if (mapData_ != null) hash ^= MapData.GetHashCode();
      if (itemData_ != null) hash ^= ItemData.GetHashCode();
      if (shopData_ != null) hash ^= ShopData.GetHashCode();
      if (staffData_ != null) hash ^= StaffData.GetHashCode();
      if (equipData_ != null) hash ^= EquipData.GetHashCode();
      if (truckData_ != null) hash ^= TruckData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerData);
      }
      if (mapData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MapData);
      }
      if (itemData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ItemData);
      }
      if (shopData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ShopData);
      }
      if (staffData_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StaffData);
      }
      if (equipData_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EquipData);
      }
      if (truckData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TruckData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerData);
      }
      if (mapData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapData);
      }
      if (itemData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemData);
      }
      if (shopData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShopData);
      }
      if (staffData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StaffData);
      }
      if (equipData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EquipData);
      }
      if (truckData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TruckData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStruct other) {
      if (other == null) {
        return;
      }
      if (other.playerData_ != null) {
        if (playerData_ == null) {
          playerData_ = new global::Common.Protobuf.PlayerData();
        }
        PlayerData.MergeFrom(other.PlayerData);
      }
      if (other.mapData_ != null) {
        if (mapData_ == null) {
          mapData_ = new global::Common.Protobuf.MapData();
        }
        MapData.MergeFrom(other.MapData);
      }
      if (other.itemData_ != null) {
        if (itemData_ == null) {
          itemData_ = new global::Common.Protobuf.ItemData();
        }
        ItemData.MergeFrom(other.ItemData);
      }
      if (other.shopData_ != null) {
        if (shopData_ == null) {
          shopData_ = new global::Common.Protobuf.ShopData();
        }
        ShopData.MergeFrom(other.ShopData);
      }
      if (other.staffData_ != null) {
        if (staffData_ == null) {
          staffData_ = new global::Common.Protobuf.StaffData();
        }
        StaffData.MergeFrom(other.StaffData);
      }
      if (other.equipData_ != null) {
        if (equipData_ == null) {
          equipData_ = new global::Common.Protobuf.EquipData();
        }
        EquipData.MergeFrom(other.EquipData);
      }
      if (other.truckData_ != null) {
        if (truckData_ == null) {
          truckData_ = new global::Common.Protobuf.TruckData();
        }
        TruckData.MergeFrom(other.TruckData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerData_ == null) {
              playerData_ = new global::Common.Protobuf.PlayerData();
            }
            input.ReadMessage(playerData_);
            break;
          }
          case 18: {
            if (mapData_ == null) {
              mapData_ = new global::Common.Protobuf.MapData();
            }
            input.ReadMessage(mapData_);
            break;
          }
          case 26: {
            if (itemData_ == null) {
              itemData_ = new global::Common.Protobuf.ItemData();
            }
            input.ReadMessage(itemData_);
            break;
          }
          case 34: {
            if (shopData_ == null) {
              shopData_ = new global::Common.Protobuf.ShopData();
            }
            input.ReadMessage(shopData_);
            break;
          }
          case 42: {
            if (staffData_ == null) {
              staffData_ = new global::Common.Protobuf.StaffData();
            }
            input.ReadMessage(staffData_);
            break;
          }
          case 50: {
            if (equipData_ == null) {
              equipData_ = new global::Common.Protobuf.EquipData();
            }
            input.ReadMessage(equipData_);
            break;
          }
          case 58: {
            if (truckData_ == null) {
              truckData_ = new global::Common.Protobuf.TruckData();
            }
            input.ReadMessage(truckData_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///玩家基础数据
  /// </summary>
  public sealed partial class PlayerData : pb::IMessage<PlayerData> {
    private static readonly pb::MessageParser<PlayerData> _parser = new pb::MessageParser<PlayerData>(() => new PlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData(PlayerData other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      mapName_ = other.mapName_;
      money_ = other.money_;
      praise_ = other.praise_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData Clone() {
      return new PlayerData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "map_name" field.</summary>
    public const int MapNameFieldNumber = 3;
    private string mapName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapName {
      get { return mapName_; }
      set {
        mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 4;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "praise" field.</summary>
    public const int PraiseFieldNumber = 5;
    private int praise_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Praise {
      get { return praise_; }
      set {
        praise_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (MapName != other.MapName) return false;
      if (Money != other.Money) return false;
      if (Praise != other.Praise) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MapName.Length != 0) hash ^= MapName.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (Praise != 0) hash ^= Praise.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (MapName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MapName);
      }
      if (Money != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Money);
      }
      if (Praise != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Praise);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MapName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (Praise != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Praise);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MapName.Length != 0) {
        MapName = other.MapName;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.Praise != 0) {
        Praise = other.Praise;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            MapName = input.ReadString();
            break;
          }
          case 32: {
            Money = input.ReadInt32();
            break;
          }
          case 40: {
            Praise = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///地图数据
  /// </summary>
  public sealed partial class MapData : pb::IMessage<MapData> {
    private static readonly pb::MessageParser<MapData> _parser = new pb::MessageParser<MapData>(() => new MapData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapData(MapData other) : this() {
      map_ = other.map_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapData Clone() {
      return new MapData(this);
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Common.Protobuf.MapDataUnit>.Codec _map_map_codec
        = new pbc::MapField<string, global::Common.Protobuf.MapDataUnit>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Common.Protobuf.MapDataUnit.Parser), 10);
    private readonly pbc::MapField<string, global::Common.Protobuf.MapDataUnit> map_ = new pbc::MapField<string, global::Common.Protobuf.MapDataUnit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Common.Protobuf.MapDataUnit> Map {
      get { return map_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Map.Equals(other.Map)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Map.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      map_.WriteTo(output, _map_map_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += map_.CalculateSize(_map_map_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapData other) {
      if (other == null) {
        return;
      }
      map_.Add(other.map_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            map_.AddEntriesFrom(input, _map_map_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个地图数据
  /// </summary>
  public sealed partial class MapDataUnit : pb::IMessage<MapDataUnit> {
    private static readonly pb::MessageParser<MapDataUnit> _parser = new pb::MessageParser<MapDataUnit>(() => new MapDataUnit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapDataUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapDataUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapDataUnit(MapDataUnit other) : this() {
      terrainList_ = other.terrainList_.Clone();
      buildList_ = other.buildList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapDataUnit Clone() {
      return new MapDataUnit(this);
    }

    /// <summary>Field number for the "terrain_list" field.</summary>
    public const int TerrainListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.Protobuf.MapTerrainData> _repeated_terrainList_codec
        = pb::FieldCodec.ForMessage(10, global::Common.Protobuf.MapTerrainData.Parser);
    private readonly pbc::RepeatedField<global::Common.Protobuf.MapTerrainData> terrainList_ = new pbc::RepeatedField<global::Common.Protobuf.MapTerrainData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Protobuf.MapTerrainData> TerrainList {
      get { return terrainList_; }
    }

    /// <summary>Field number for the "build_list" field.</summary>
    public const int BuildListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Common.Protobuf.MapBuildData> _repeated_buildList_codec
        = pb::FieldCodec.ForMessage(18, global::Common.Protobuf.MapBuildData.Parser);
    private readonly pbc::RepeatedField<global::Common.Protobuf.MapBuildData> buildList_ = new pbc::RepeatedField<global::Common.Protobuf.MapBuildData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Protobuf.MapBuildData> BuildList {
      get { return buildList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapDataUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapDataUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!terrainList_.Equals(other.terrainList_)) return false;
      if(!buildList_.Equals(other.buildList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= terrainList_.GetHashCode();
      hash ^= buildList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      terrainList_.WriteTo(output, _repeated_terrainList_codec);
      buildList_.WriteTo(output, _repeated_buildList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += terrainList_.CalculateSize(_repeated_terrainList_codec);
      size += buildList_.CalculateSize(_repeated_buildList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapDataUnit other) {
      if (other == null) {
        return;
      }
      terrainList_.Add(other.terrainList_);
      buildList_.Add(other.buildList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            terrainList_.AddEntriesFrom(input, _repeated_terrainList_codec);
            break;
          }
          case 18: {
            buildList_.AddEntriesFrom(input, _repeated_buildList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///土地数据
  /// </summary>
  public sealed partial class MapTerrainData : pb::IMessage<MapTerrainData> {
    private static readonly pb::MessageParser<MapTerrainData> _parser = new pb::MessageParser<MapTerrainData>(() => new MapTerrainData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapTerrainData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapTerrainData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapTerrainData(MapTerrainData other) : this() {
      gridId_ = other.gridId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapTerrainData Clone() {
      return new MapTerrainData(this);
    }

    /// <summary>Field number for the "grid_id" field.</summary>
    public const int GridIdFieldNumber = 1;
    private int gridId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GridId {
      get { return gridId_; }
      set {
        gridId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapTerrainData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapTerrainData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GridId != other.GridId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GridId != 0) hash ^= GridId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GridId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GridId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GridId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GridId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapTerrainData other) {
      if (other == null) {
        return;
      }
      if (other.GridId != 0) {
        GridId = other.GridId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GridId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///建筑数据
  /// </summary>
  public sealed partial class MapBuildData : pb::IMessage<MapBuildData> {
    private static readonly pb::MessageParser<MapBuildData> _parser = new pb::MessageParser<MapBuildData>(() => new MapBuildData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapBuildData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapBuildData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapBuildData(MapBuildData other) : this() {
      gridId_ = other.gridId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapBuildData Clone() {
      return new MapBuildData(this);
    }

    /// <summary>Field number for the "grid_id" field.</summary>
    public const int GridIdFieldNumber = 1;
    private int gridId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GridId {
      get { return gridId_; }
      set {
        gridId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapBuildData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapBuildData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GridId != other.GridId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GridId != 0) hash ^= GridId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GridId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GridId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GridId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GridId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapBuildData other) {
      if (other == null) {
        return;
      }
      if (other.GridId != 0) {
        GridId = other.GridId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GridId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///物品数据
  /// </summary>
  public sealed partial class ItemData : pb::IMessage<ItemData> {
    private static readonly pb::MessageParser<ItemData> _parser = new pb::MessageParser<ItemData>(() => new ItemData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData(ItemData other) : this() {
      version_ = other.version_;
      grid_ = other.grid_;
      itemList_ = other.itemList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData Clone() {
      return new ItemData(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "grid" field.</summary>
    public const int GridFieldNumber = 2;
    private int grid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Grid {
      get { return grid_; }
      set {
        grid_ = value;
      }
    }

    /// <summary>Field number for the "item_list" field.</summary>
    public const int ItemListFieldNumber = 3;
    private static readonly pbc::MapField<int, int>.Codec _map_itemList_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForInt32(16), 26);
    private readonly pbc::MapField<int, int> itemList_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> ItemList {
      get { return itemList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Grid != other.Grid) return false;
      if (!ItemList.Equals(other.ItemList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Grid != 0) hash ^= Grid.GetHashCode();
      hash ^= ItemList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (Grid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Grid);
      }
      itemList_.WriteTo(output, _map_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Grid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Grid);
      }
      size += itemList_.CalculateSize(_map_itemList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemData other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Grid != 0) {
        Grid = other.Grid;
      }
      itemList_.Add(other.itemList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 16: {
            Grid = input.ReadInt32();
            break;
          }
          case 26: {
            itemList_.AddEntriesFrom(input, _map_itemList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///商店数据
  /// </summary>
  public sealed partial class ShopData : pb::IMessage<ShopData> {
    private static readonly pb::MessageParser<ShopData> _parser = new pb::MessageParser<ShopData>(() => new ShopData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopData(ShopData other) : this() {
      capacity_ = other.capacity_;
      itemList_ = other.itemList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopData Clone() {
      return new ShopData(this);
    }

    /// <summary>Field number for the "capacity" field.</summary>
    public const int CapacityFieldNumber = 1;
    private int capacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacity {
      get { return capacity_; }
      set {
        capacity_ = value;
      }
    }

    /// <summary>Field number for the "item_list" field.</summary>
    public const int ItemListFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_itemList_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> itemList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemList {
      get { return itemList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Capacity != other.Capacity) return false;
      if(!itemList_.Equals(other.itemList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Capacity != 0) hash ^= Capacity.GetHashCode();
      hash ^= itemList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Capacity != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Capacity);
      }
      itemList_.WriteTo(output, _repeated_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Capacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacity);
      }
      size += itemList_.CalculateSize(_repeated_itemList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopData other) {
      if (other == null) {
        return;
      }
      if (other.Capacity != 0) {
        Capacity = other.Capacity;
      }
      itemList_.Add(other.itemList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Capacity = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            itemList_.AddEntriesFrom(input, _repeated_itemList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///雇佣数据
  /// </summary>
  public sealed partial class StaffData : pb::IMessage<StaffData> {
    private static readonly pb::MessageParser<StaffData> _parser = new pb::MessageParser<StaffData>(() => new StaffData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StaffData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaffData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaffData(StaffData other) : this() {
      staffList_ = other.staffList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaffData Clone() {
      return new StaffData(this);
    }

    /// <summary>Field number for the "staff_list" field.</summary>
    public const int StaffListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.Protobuf.StaffInfo> _repeated_staffList_codec
        = pb::FieldCodec.ForMessage(10, global::Common.Protobuf.StaffInfo.Parser);
    private readonly pbc::RepeatedField<global::Common.Protobuf.StaffInfo> staffList_ = new pbc::RepeatedField<global::Common.Protobuf.StaffInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Protobuf.StaffInfo> StaffList {
      get { return staffList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StaffData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StaffData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!staffList_.Equals(other.staffList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= staffList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      staffList_.WriteTo(output, _repeated_staffList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += staffList_.CalculateSize(_repeated_staffList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StaffData other) {
      if (other == null) {
        return;
      }
      staffList_.Add(other.staffList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            staffList_.AddEntriesFrom(input, _repeated_staffList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StaffInfo : pb::IMessage<StaffInfo> {
    private static readonly pb::MessageParser<StaffInfo> _parser = new pb::MessageParser<StaffInfo>(() => new StaffInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StaffInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaffInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaffInfo(StaffInfo other) : this() {
      id_ = other.id_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StaffInfo Clone() {
      return new StaffInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private int endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StaffInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StaffInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EndTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StaffInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EndTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Attr : pb::IMessage<Attr> {
    private static readonly pb::MessageParser<Attr> _parser = new pb::MessageParser<Attr>(() => new Attr());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attr() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attr(Attr other) : this() {
      hp_ = other.hp_;
      mp_ = other.mp_;
      food_ = other.food_;
      mood_ = other.mood_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attr Clone() {
      return new Attr(this);
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 1;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "mp" field.</summary>
    public const int MpFieldNumber = 2;
    private int mp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mp {
      get { return mp_; }
      set {
        mp_ = value;
      }
    }

    /// <summary>Field number for the "food" field.</summary>
    public const int FoodFieldNumber = 3;
    private int food_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Food {
      get { return food_; }
      set {
        food_ = value;
      }
    }

    /// <summary>Field number for the "mood" field.</summary>
    public const int MoodFieldNumber = 4;
    private int mood_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mood {
      get { return mood_; }
      set {
        mood_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attr other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hp != other.Hp) return false;
      if (Mp != other.Mp) return false;
      if (Food != other.Food) return false;
      if (Mood != other.Mood) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Mp != 0) hash ^= Mp.GetHashCode();
      if (Food != 0) hash ^= Food.GetHashCode();
      if (Mood != 0) hash ^= Mood.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Hp);
      }
      if (Mp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mp);
      }
      if (Food != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Food);
      }
      if (Mood != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Mood);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (Mp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mp);
      }
      if (Food != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Food);
      }
      if (Mood != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mood);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attr other) {
      if (other == null) {
        return;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.Mp != 0) {
        Mp = other.Mp;
      }
      if (other.Food != 0) {
        Food = other.Food;
      }
      if (other.Mood != 0) {
        Mood = other.Mood;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Hp = input.ReadInt32();
            break;
          }
          case 16: {
            Mp = input.ReadInt32();
            break;
          }
          case 24: {
            Food = input.ReadInt32();
            break;
          }
          case 32: {
            Mood = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///装备数据
  /// </summary>
  public sealed partial class EquipData : pb::IMessage<EquipData> {
    private static readonly pb::MessageParser<EquipData> _parser = new pb::MessageParser<EquipData>(() => new EquipData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipData(EquipData other) : this() {
      capacity_ = other.capacity_;
      equipList_ = other.equipList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipData Clone() {
      return new EquipData(this);
    }

    /// <summary>Field number for the "capacity" field.</summary>
    public const int CapacityFieldNumber = 1;
    private int capacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacity {
      get { return capacity_; }
      set {
        capacity_ = value;
      }
    }

    /// <summary>Field number for the "equip_list" field.</summary>
    public const int EquipListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Common.Protobuf.EquipInfo> _repeated_equipList_codec
        = pb::FieldCodec.ForMessage(18, global::Common.Protobuf.EquipInfo.Parser);
    private readonly pbc::RepeatedField<global::Common.Protobuf.EquipInfo> equipList_ = new pbc::RepeatedField<global::Common.Protobuf.EquipInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Protobuf.EquipInfo> EquipList {
      get { return equipList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Capacity != other.Capacity) return false;
      if(!equipList_.Equals(other.equipList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Capacity != 0) hash ^= Capacity.GetHashCode();
      hash ^= equipList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Capacity != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Capacity);
      }
      equipList_.WriteTo(output, _repeated_equipList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Capacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacity);
      }
      size += equipList_.CalculateSize(_repeated_equipList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipData other) {
      if (other == null) {
        return;
      }
      if (other.Capacity != 0) {
        Capacity = other.Capacity;
      }
      equipList_.Add(other.equipList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Capacity = input.ReadInt32();
            break;
          }
          case 18: {
            equipList_.AddEntriesFrom(input, _repeated_equipList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipInfo : pb::IMessage<EquipInfo> {
    private static readonly pb::MessageParser<EquipInfo> _parser = new pb::MessageParser<EquipInfo>(() => new EquipInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipInfo(EquipInfo other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipInfo Clone() {
      return new EquipInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///货车数据
  /// </summary>
  public sealed partial class TruckData : pb::IMessage<TruckData> {
    private static readonly pb::MessageParser<TruckData> _parser = new pb::MessageParser<TruckData>(() => new TruckData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TruckData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TruckData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TruckData(TruckData other) : this() {
      truckList_ = other.truckList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TruckData Clone() {
      return new TruckData(this);
    }

    /// <summary>Field number for the "truck_list" field.</summary>
    public const int TruckListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.Protobuf.TruckInfo> _repeated_truckList_codec
        = pb::FieldCodec.ForMessage(10, global::Common.Protobuf.TruckInfo.Parser);
    private readonly pbc::RepeatedField<global::Common.Protobuf.TruckInfo> truckList_ = new pbc::RepeatedField<global::Common.Protobuf.TruckInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Protobuf.TruckInfo> TruckList {
      get { return truckList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TruckData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TruckData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!truckList_.Equals(other.truckList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= truckList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      truckList_.WriteTo(output, _repeated_truckList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += truckList_.CalculateSize(_repeated_truckList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TruckData other) {
      if (other == null) {
        return;
      }
      truckList_.Add(other.truckList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            truckList_.AddEntriesFrom(input, _repeated_truckList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TruckInfo : pb::IMessage<TruckInfo> {
    private static readonly pb::MessageParser<TruckInfo> _parser = new pb::MessageParser<TruckInfo>(() => new TruckInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TruckInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TruckInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TruckInfo(TruckInfo other) : this() {
      id_ = other.id_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TruckInfo Clone() {
      return new TruckInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private int endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TruckInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TruckInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EndTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TruckInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EndTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///聊天玩家所需数据
  /// </summary>
  public sealed partial class ChatPlayer : pb::IMessage<ChatPlayer> {
    private static readonly pb::MessageParser<ChatPlayer> _parser = new pb::MessageParser<ChatPlayer>(() => new ChatPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPlayer(ChatPlayer other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatPlayer Clone() {
      return new ChatPlayer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatPlayer other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///聊天数据
  /// </summary>
  public sealed partial class ChatData : pb::IMessage<ChatData> {
    private static readonly pb::MessageParser<ChatData> _parser = new pb::MessageParser<ChatData>(() => new ChatData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatData(ChatData other) : this() {
      chatPlayer_ = other.chatPlayer_ != null ? other.chatPlayer_.Clone() : null;
      content_ = other.content_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatData Clone() {
      return new ChatData(this);
    }

    /// <summary>Field number for the "chat_player" field.</summary>
    public const int ChatPlayerFieldNumber = 1;
    private global::Common.Protobuf.ChatPlayer chatPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.ChatPlayer ChatPlayer {
      get { return chatPlayer_; }
      set {
        chatPlayer_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    /// <summary>
    ///内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private int time_;
    /// <summary>
    ///时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatPlayer, other.ChatPlayer)) return false;
      if (Content != other.Content) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (chatPlayer_ != null) hash ^= ChatPlayer.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (chatPlayer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatPlayer);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (Time != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (chatPlayer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatPlayer);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatData other) {
      if (other == null) {
        return;
      }
      if (other.chatPlayer_ != null) {
        if (chatPlayer_ == null) {
          chatPlayer_ = new global::Common.Protobuf.ChatPlayer();
        }
        ChatPlayer.MergeFrom(other.ChatPlayer);
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chatPlayer_ == null) {
              chatPlayer_ = new global::Common.Protobuf.ChatPlayer();
            }
            input.ReadMessage(chatPlayer_);
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///客户端设置数据
  /// </summary>
  public sealed partial class SettingData : pb::IMessage<SettingData> {
    private static readonly pb::MessageParser<SettingData> _parser = new pb::MessageParser<SettingData>(() => new SettingData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SettingData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SettingData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SettingData(SettingData other) : this() {
      lang_ = other.lang_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SettingData Clone() {
      return new SettingData(this);
    }

    /// <summary>Field number for the "lang" field.</summary>
    public const int LangFieldNumber = 1;
    private string lang_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lang {
      get { return lang_; }
      set {
        lang_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SettingData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SettingData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lang != other.Lang) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lang.Length != 0) hash ^= Lang.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lang.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Lang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lang.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lang);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SettingData other) {
      if (other == null) {
        return;
      }
      if (other.Lang.Length != 0) {
        Lang = other.Lang;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Lang = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
